
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: bf0e5e8a04cada8225617067eaa03d041e2bba36
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "bf0e5e8a04cada8225617067eaa03d041e2bba36"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.FavoritesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  recipe_id: 'recipe_id',
  created_at: 'created_at'
};

exports.Prisma.IngredientsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  shelf_life_days: 'shelf_life_days',
  calories: 'calories',
  protein_gram: 'protein_gram',
  carbs_gram: 'carbs_gram',
  fat_gram: 'fat_gram'
};

exports.Prisma.InventoryScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  ingredient_id: 'ingredient_id',
  quantity: 'quantity',
  expiration_date: 'expiration_date'
};

exports.Prisma.RatingsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  recipe_id: 'recipe_id',
  score: 'score',
  comment: 'comment',
  created_at: 'created_at'
};

exports.Prisma.Recipe_ingredientsScalarFieldEnum = {
  id: 'id',
  recipe_id: 'recipe_id',
  ingredient_id: 'ingredient_id',
  amount: 'amount',
  unit: 'unit',
  original: 'original'
};

exports.Prisma.Recipe_stepsScalarFieldEnum = {
  id: 'id',
  recipe_id: 'recipe_id',
  step_number: 'step_number',
  description: 'description',
  duration_minutes: 'duration_minutes'
};

exports.Prisma.RecipesScalarFieldEnum = {
  id: 'id',
  created_by_id: 'created_by_id',
  spoonacular_id: 'spoonacular_id',
  title: 'title',
  image_url: 'image_url',
  servings: 'servings',
  ready_in_minutes: 'ready_in_minutes',
  cooking_minutes: 'cooking_minutes',
  preparation_minutes: 'preparation_minutes',
  dish_types: 'dish_types',
  summary: 'summary',
  instructions: 'instructions',
  health_score: 'health_score',
  spoonacular_score: 'spoonacular_score',
  price_per_serving: 'price_per_serving',
  vegan: 'vegan',
  vegetarian: 'vegetarian',
  gluten_free: 'gluten_free',
  dairy_free: 'dairy_free',
  weight_watcher_points: 'weight_watcher_points',
  created_at: 'created_at'
};

exports.Prisma.Shopping_listScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  plan_id: 'plan_id',
  name: 'name',
  created_at: 'created_at',
  finalized: 'finalized'
};

exports.Prisma.Shopping_list_itemScalarFieldEnum = {
  id: 'id',
  list_id: 'list_id',
  ingredient_id: 'ingredient_id',
  amount: 'amount',
  unit: 'unit',
  purchased: 'purchased'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  firebase_uid: 'firebase_uid',
  email: 'email',
  created_at: 'created_at',
  name: 'name',
  avatar_url: 'avatar_url'
};

exports.Prisma.Weekly_planScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  start_date: 'start_date',
  created_at: 'created_at'
};

exports.Prisma.Weekly_plan_itemScalarFieldEnum = {
  id: 'id',
  plan_id: 'plan_id',
  date: 'date',
  meal_type: 'meal_type',
  recipe_id: 'recipe_id'
};

exports.Prisma.TagsScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.User_tagsScalarFieldEnum = {
  user_id: 'user_id',
  tag_id: 'tag_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  favorites: 'favorites',
  ingredients: 'ingredients',
  inventory: 'inventory',
  ratings: 'ratings',
  recipe_ingredients: 'recipe_ingredients',
  recipe_steps: 'recipe_steps',
  recipes: 'recipes',
  shopping_list: 'shopping_list',
  shopping_list_item: 'shopping_list_item',
  users: 'users',
  weekly_plan: 'weekly_plan',
  weekly_plan_item: 'weekly_plan_item',
  tags: 'tags',
  user_tags: 'user_tags'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
