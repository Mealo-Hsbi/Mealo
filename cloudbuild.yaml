# cloudbuild.yaml im Root-Verzeichnis deines GitHub-Repos
steps:
# Schritt 1: Docker Image bauen
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '-t'
    - 'europe-west3-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/mealo/mealo:$COMMIT_SHA'
    - '.' # Wichtig: Der Punkt bezieht sich jetzt auf das 'dir'-Verzeichnis
  dir: 'backend' 

# Schritt 2: Docker Image in Artifact Registry pushen
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'push'
    - 'europe-west3-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/mealo/mealo:$COMMIT_SHA'

# Schritt 3: Docker Image nach Cloud Run deployen
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'beta'
    - 'run'
    - 'deploy'
    - 'mealo'
    - '--project=$PROJECT_ID'
    - '--region=europe-west3'
    - '--platform=managed'
    - '--image=europe-west3-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/mealo/mealo:$COMMIT_SHA'
    - '--set-env-vars=GOOGLE_APPLICATION_CREDENTIALS=/secrets/firebase/serviceAccountKey.json,TEST_VAR=hallo_welt'
    - '--update-secrets=/secrets/firebase/serviceAccountKey.json=firebase-service-account:latest'
    - '--service-account=1095476512586-compute@developer.gserviceaccount.com'
    - '--quiet'
  waitFor: ['-']

# Diesen Block f√ºgst du NEU HINZU, ganz unten in der cloudbuild.yaml, nach dem 'images'-Block oder wenn kein 'images'-Block da ist, nach dem letzten 'step'.
options:
  # Konfiguriert, dass Logs nur in Cloud Logging gespeichert werden.
  logging: CLOUD_LOGGING_ONLY

images:
- 'europe-west3-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/mealo/mealo:$COMMIT_SHA'
