steps:
  # 1) Build the image (from ./backend) und taggen
  - id: 'build'
    name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    args:
      - build
      - '-t'
      - 'europe-west3-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/mealo/mealo:$COMMIT_SHA'
      - '.'

  # 2) Push the image to Artifact Registry
  - id: 'push'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - 'europe-west3-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/mealo/mealo:$COMMIT_SHA'

  # 3) Deploy zu Cloud Run, mit Secret-Injection
  - id: 'deploy'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - beta
      - run
      - deploy
      - mealo
      - --project=$PROJECT_ID
      - --region=europe-west3
      - --platform=managed
      - --image=europe-west3-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/mealo/mealo:$COMMIT_SHA
      # Injektion der gewünschten Secrets als Umgebungsvariablen.
      - --update-secrets=GOOGLE_APPLICATION_CREDENTIALS=firebase-service-account:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest,DATABASE_URL=mealo-database-url:latest
      # Fügen Sie ein Volume für GCS_KEY_FILE hinzu und mounten Sie es.
      # Der 'type=secret' muss hier hinzugefügt werden.
      - --add-volume=name=gcs-key-volume,type=secret,secret=gcs-media-uploader-key # <-- Hier 'type=secret' hinzugefügt
      - --add-volume-mount=volume=gcs-key-volume,path=/app/certs/media-uploader-key.json
      # Setzen anderer Umgebungsvariablen, die keine Secrets sind
      - --set-env-vars=BUCKET_NAME=mealo-media,GCS_KEY_FILE=/app/certs/media-uploader-key.json
      # Service-Account für Cloud Run
      - --service-account=1095476512586-compute@developer.gserviceaccount.com
      - --quiet

# Nur Cloud Logging
options:
  logging: CLOUD_LOGGING_ONLY

# Artefakt-Registry
images:
  - 'europe-west3-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/mealo/mealo:$COMMIT_SHA'